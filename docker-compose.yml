services:
  npm:
    image: node:18-alpine # Choose an appropriate Node.js version
    container_name: npm
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    command: npm run watch
    networks:
      - sail

  # Laravel service
  laravel.test:
    build:
      context: .
      dockerfile: Dockerfile
    image: sail-8.0/app
    container_name: laravel_test
    ports:
      - "${APP_PORT:-80}:80"
      - "443:443" # Expose HTTPS port
    environment:
      WWWUSER: "${WWWUSER:-1000}"
      WWWGROUP: "${WWWGROUP:-1000}"
      LARAVEL_SAIL: 1
    volumes:
      - ".:/var/www/html"
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf # Mount Nginx config
      - ./certificates:/etc/nginx/certificates # Mount certificates folder
    networks:
      - sail
    depends_on:
      - redis

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8443:8443" # Expose HTTPS port
      - "8080:8080" # Expose HTTP port
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf # Mount custom Nginx config
      - ./certificates:/etc/nginx/certificates # Mount certificates folder
      - .:/var/www/html # Mount Laravel project files
    networks:
      - sail
    depends_on:
      - laravel.test

  # Redis service
  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - "sailredis:/data"
    networks:
      - sail
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s

networks:
  sail:
    driver: bridge

volumes:
  sailmysql:
    driver: local
  sailredis:
    driver: local
